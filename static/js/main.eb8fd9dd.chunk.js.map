{"version":3,"sources":["index.js"],"names":["colors","Quote","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","category","className","text","author","QuoteBoxBtns","onClick","tweetQuote","getQuote","CircleTimer","r","cx","cy","QuoteBox","_this","Object","_home_sola_Code_JavaScript_React_random_quote_machine_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_sola_Code_JavaScript_React_random_quote_machine_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_sola_Code_JavaScript_React_random_quote_machine_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","seconds","isClicked","_this2","setState","timer","document","getElementById","classList","toggle","setTimeout","restartTimerAnimation","fetch","then","res","json","result","quote","cat","num","Math","floor","random","length","body","btns","getElementsByClassName","style","background","color","stroke","i","changeColor","window","open","escape","_this3","interval","setInterval","tick","clearInterval","_this4","React","Component","ReactDOM","render"],"mappings":"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","file":"static/js/main.eb8fd9dd.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nconst colors = ['#FF6633', '#FFB399', '#FF33FF', '#00B3E6',\n\t\t  '#E6B333', '#3366E6', '#999966', '#B34D4D',\n\t\t  '#80B300', '#E6B3B3', '#6680B3', '#66991A',\n\t\t  '#FF99E6', '#FF1A66', '#E6331A', '#33FFCC',\n\t\t  '#E64D66', '#4DB380', '#FF4D4D', '#6666FF'];\n\nfunction Quote(props) {\n  return (\n      <div>\n        <h1 id=\"category\">{props.category}</h1>\n        <p id=\"text\">\n          <i className=\"fas fa-quote-left\"></i>\n          {' ' + props.text + ' '}\n          <i className=\"fas fa-quote-right\"></i>\n        </p>\n        <p id=\"author\">-- {props.author} --</p>\n      </div>\n  );\n}\n\nfunction QuoteBoxBtns(props) {\n  return (\n    <div id=\"quote-btns\">\n      <button id=\"tweet-quote\"\n              className=\"btn rounded animated\"\n              onClick={props.tweetQuote}>\n              <i className=\"fab fa-twitter\"></i>\n      </button>\n      <button id=\"new-quote\"\n              className=\"btn rounded animated\"\n              onClick={props.getQuote}>\n              <i className=\"fas fa-plus\"></i>\n      </button>\n    </div>\n  );\n}\n\nfunction CircleTimer() {\n\treturn (\n\t\t<svg>\n\t\t\t<circle id=\"timer\" className=\"timer-animation\" r=\"18\" cx=\"20\" cy=\"20\" />\n\t\t</svg>\n\t);\n}\n\nclass QuoteBox extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: null,\n      author: null,\n      category: null,\n\t\t\tseconds: 0\n    };\n  }\n\n  getQuote(isClicked) {\n\t\tif (isClicked) {\n\t\t\tthis.setState({seconds: 0});\n\t\t\trestartTimerAnimation();\n\t\t}\n\n    const url = \"https://talaikis.com/api/quotes/random/\"\n\n    fetch(url)\n      .then(res => res.json())\n      .then(result => {\n        this.setState({\n          text: result.quote,\n          author: result.author,\n          category: result.cat\n        })\n      });\n\n    changeColor()\n  }\n\n  tweetQuote() {\n    const url = 'https://twitter.com/intent/tweet?text='\n    window.open(url + escape(this.state.text + \"\\n- \" + this.state.author));\n  }\n\n\ttick () {\n\t\tthis.setState(state => ({\n\t\t\tseconds: state.seconds + 1\n\t\t}));\n\t\tif (this.state.seconds % 10 === 0) {\n\t\t\tthis.getQuote();\n\t\t}\n\t}\n\n  componentDidMount() {\n    this.getQuote();\n\t\tthis.interval = setInterval(() => this.tick(), 1000);\n  }\n\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.interval);\n\t}\n\n  render() {\n    return (\n      <div id=\"quote-box\" className=\"white-background box rounded shadow\">\n        <Quote\n          author={this.state.author}\n          text={this.state.text}\n          category={this.state.category}\n        />\n\t\t\t\t<div id=\"lower-container\">\n\t\t\t\t\t<CircleTimer />\n        \t<QuoteBoxBtns\n          \tgetQuote={() => this.getQuote(true)}\n          \ttweetQuote={() => this.tweetQuote()}\n        \t/>\n\t\t\t\t</div>\n      </div>\n    );\n  }\n}\n\n// ===================================================================\n\nReactDOM.render(<QuoteBox />, document.getElementById('root'))\n\nfunction changeColor() {\n  let num = Math.floor(Math.random() * colors.length);\n  const body = document.body;\n  const btns = document.getElementsByClassName('btn');\n\tconst timer = document.getElementById('timer');\n\n  body.style.background = colors[num];\n  body.style.color = colors[num];\n\ttimer.style.stroke = colors[num];\n\n  for (let i = 0; i < btns.length; i++) {\n    btns[i].style.background = colors[num];\n  }\n}\n\nfunction restartTimerAnimation() {\n\tconst timer = document.getElementById('timer');\n\n\ttimer.classList.toggle('timer-animation');\n\t// Need to delay toggle for animation to restart properly.\n\tsetTimeout(() => timer.classList.toggle('timer-animation'), 10);\n}\n"],"sourceRoot":""}